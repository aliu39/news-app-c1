{"version":3,"sources":["components/Article.js","App.js","serviceWorker.js","index.js"],"names":["Article","props","saveArticle","setState","cached","state","img_src","info","urlToImage","source","name","title","description","url","content","fullData","strData","JSON","stringify","tab","console","log","className","src","this","align","href","target","rel","onClick","React","Component","App","composeUrl","PROXY","US","currPage","category","keywords","length","i","getNews","h","Headers","append","reqUrl","req","Request","method","headers","mode","fetch","then","response","ok","json","Error","status","jsonData","toggleTab","updateCache","totalResults","articleData","newRefs","articles","push","createRef","refs","catch","err","message","updateRefs","newCache","seen","Set","numEntries","article","current","add","cache","data","has","clearCache","categoryBtn","cat","pageDecr","pageIncr","handleChange","event","currKeyword","value","handleSubmit","concat","preventDefault","clearKeywords","cachedRefs","onSubmit","type","style","marginLeft","marginRight","onChange","toString","map","ref","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"sNAMqBA,E,kDACnB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAuBRC,YAAc,WACZ,EAAKC,SAAS,CACZC,QAAQ,KAxBV,EAAKC,MAAQ,CACXC,QAASL,EAAMM,KAAKC,WACpBC,OAAQR,EAAMM,KAAKE,OAAOC,KAC1BC,MAAOV,EAAMM,KAAKI,MAClBC,YAAaX,EAAMM,KAAKK,YACxBC,IAAKZ,EAAMM,KAAKM,IAChBC,QAASb,EAAMM,KAAKO,QACpBC,SAAUd,EAAMM,KAChBS,QAASC,KAAKC,UAAUjB,EAAMM,MAC9BH,QAAQ,EACRe,IAAKlB,EAAMkB,KAZI,E,gEAiBjBC,QAAQC,IAAI,iB,6CAIZD,QAAQC,IAAI,wB,+BAWZ,OACE,sBAAKC,UAAU,UAAf,UACE,qBAAKC,IAA2B,MAAtBC,KAAKnB,MAAMC,QAAkBkB,KAAKnB,MAAMC,QAtCxD,6FAuCM,8BACE,4BAAIkB,KAAKnB,MAAMM,MAAQ,IAAMa,KAAKnB,MAAMI,SAD1C,IACsD,uBACnDe,KAAKnB,MAAMO,YAFd,IAE2B,0BAE3B,4BACGY,KAAKnB,MAAMS,UAId,oBAAGW,MAAM,QAAT,UACE,mBAAGC,KAAMF,KAAKnB,MAAMQ,IAAKc,OAAO,SAASC,IAAI,aAA7C,8BADF,IAEyB,uBACtBJ,KAAKnB,MAAMc,IAAM,KAChB,wBAAQG,UAAU,MAAMO,QAASL,KAAKtB,YAAtC,4B,GAjDyB4B,IAAMC,WC0R5BC,E,kDA9Qb,WAAY/B,GAAQ,IAAD,8BACjB,cAAMA,IAeRgC,WAAa,WACX,IAAIpB,EACFqB,oHAIC,EAAK7B,MAAM8B,GAAK,cAAgB,IAJjCD,qBAQA,EAAK7B,MAAM+B,SACX,aACA,EAAK/B,MAAMgC,SACb,GAAI,EAAKhC,MAAMiC,SAASC,OAAS,EAAG,CAClC1B,GAAO,MACP,IAAK,IAAI2B,EAAI,EAAGA,EAAI,EAAKnC,MAAMiC,SAASC,OAAQC,IAC9C3B,GAAO,EAAKR,MAAMiC,SAASE,GAG/B,OAAO3B,GAnCU,EAuCnB4B,QAAU,WACR,GAA4B,KAAxB,EAAKpC,MAAMgC,SAAiB,CAC9B,IAAIK,EAAI,IAAIC,QACZD,EAAEE,OAAO,SAAU,oBACnB,IAAIC,EAAS,EAAKZ,aAClBb,QAAQC,IAAIwB,GACZ,IAAIC,EAAM,IAAIC,QAAQF,EAAQ,CAC5BG,OAAQ,MACRC,QAASP,EACTQ,KAAM,SAGRC,MAAML,GACHM,MAAK,SAAAC,GACJ,GAAIA,EAASC,GACX,OAAOD,EAASE,OAEhB,MAAM,IAAIC,MAAM,0BAA4BH,EAASI,WAGxDL,MAAK,SAAAM,GAEA,EAAKrD,MAAMc,IACb,EAAKwC,YAEL,EAAKC,cAGPxC,QAAQC,IAAIqC,EAASG,cAIrB,IAFA,IAAIC,EAAc,GACdC,EAAU,GACLvB,EAAI,EAAGA,EAAIkB,EAASM,SAASzB,OAAQC,IAC5CsB,EAAYG,KAAKP,EAASM,SAASxB,IACnCuB,EAAQE,KAAKnC,IAAMoC,aAGrB,EAAK/D,SAAS,CACZ6D,SAAUF,EACVK,KAAMJ,OAITK,OAAM,SAAAC,GACLjD,QAAQC,IAAI,UAAWgD,EAAIC,cAnFhB,EAwFnBC,WAAa,aAxFM,EA6FnBX,YAAc,WACZxC,QAAQC,IAAI,gBAIZ,IAHA,IAAImD,EAAW,GACXC,EAAO,IAAIC,IACXC,EAAa,EACRnC,EAAI,EAAGmC,EAtGH,IAsG4BnC,EAAI,EAAKnC,MAAM8D,KAAK5B,OAAQC,IAAK,CACxE,IAAIoC,EAAU,EAAKvE,MAAM8D,KAAK3B,GAAGqC,QAC7BD,EAAQvE,MAAMD,SAChBoE,EAASP,KAAKW,EAAQvE,MAAMU,UAC5B0D,EAAKK,IAAIF,EAAQvE,MAAMQ,KACvB8D,KAGJ,IAAK,IAAInC,EAAI,EAAGmC,EA9GH,IA8G4BnC,EAAI,EAAKnC,MAAM0E,MAAMxC,OAAQC,IAAK,CACzE,IAAIwC,EAAO,EAAK3E,MAAM0E,MAAMvC,GACxBiC,EAAKQ,IAAID,EAAKnE,KAChBO,QAAQC,IAAI,2BAEZmD,EAASP,KAAKe,GACdL,KAGJ,OAAOH,GAnHU,EAsHnBU,WAAa,WACP,EAAK7E,MAAMc,KACb,EAAKhB,SAAS,CACZ6D,SAAU,MAzHG,EA8HnBL,UAAY,WACV,IAAIa,EAAW,EAAKnE,MAAMc,IAAM,EAAKd,MAAM0E,MAAQ,EAAKnB,cACxD,EAAKzD,SAAS,CACZ6D,SAAUQ,EACVrD,KAAM,EAAKd,MAAMc,IACjB4D,MAAO,EAAK1E,MAAM2D,YAnIH,EAuInBmB,YAAc,SAAAC,GACZ,EAAKjF,SACH,CACEkC,SAAU+C,EACVhD,SAAU,EACVE,SAAU,IAEZ,EAAKG,UA9IU,EAkJnB4C,SAAW,WACL,EAAKhF,MAAM+B,SAAW,GACxB,EAAKjC,SACH,CACEiC,SAAU,EAAK/B,MAAM+B,SAAW,GAElC,EAAKK,UAxJQ,EA6JnB6C,SAAW,WACL,EAAKjF,MAAM2D,SAASzB,OAAS,GAC/B,EAAKpC,SACH,CACEiC,SAAU,EAAK/B,MAAM+B,SAAW,GAElC,EAAKK,UAnKQ,EAyKnB8C,aAAe,SAAAC,GACb,EAAKrF,SAAS,CAAEsF,YAAaD,EAAM7D,OAAO+D,SA1KzB,EA6KnBC,aAAe,SAAAH,GACkB,KAA3B,EAAKnF,MAAMoF,aACb,EAAKtF,SACH,CACEmC,SAAU,CAAC,EAAKjC,MAAMoF,aAAaG,OAAO,EAAKvF,MAAMiC,UACrDmD,YAAa,IAEf,EAAKhD,SAGT+C,EAAMK,kBAvLW,EA0LnBC,cAAgB,WACd,EAAK3F,SAAS,CAAEmC,SAAU,IAAM,EAAKG,UAzLrC,EAAKpC,MAAQ,CACX2D,SAAU,GACVG,KAAM,GACNhD,KAAK,EACL4D,MAAO,GACPgB,WAAY,GACZ1D,SAAU,GACVC,SAAU,GACVH,IAAI,EACJC,SAAU,EACVqD,YAAa,IAZE,E,qDA8LT,IAAD,OAEP,OACE,gCACE,sBAAKhE,MAAM,SAAX,UACE,wBACEH,UAAU,qBACVO,QAAS,kBAAM,EAAKsD,YAAY,kBAFlC,2BAMA,wBACE7D,UAAU,qBACVO,QAAS,kBAAM,EAAKsD,YAAY,WAFlC,oBAMA,wBACE7D,UAAU,qBACVO,QAAS,kBAAM,EAAKsD,YAAY,eAFlC,2BAQF,sBAAK7D,UAAU,aAAf,UACE,sBAAKA,UAAU,WAAf,UACGE,KAAKnB,MAAMc,IAAM,KAChB,wBAAQU,QAASL,KAAK6D,SAAU/D,UAAU,SAA1C,kBAIDE,KAAKnB,MAAMc,IAAM,KAChB,wBAAQU,QAASL,KAAK8D,SAAUhE,UAAU,SAA1C,qBAKJ,sBAAKA,UAAU,YAAf,UACE,uBAAM0E,SAAUxE,KAAKmE,aAArB,UACE,uBACEM,KAAK,OACLC,MAAO,CAAEC,WAAY,GAAIC,YAAa,IACtCV,MAAOlE,KAAKnB,MAAMoF,YAClBY,SAAU7E,KAAK+D,eAEjB,uBAAOU,KAAK,SAASP,MAAM,gBAC3B,wBAAQ7D,QAASL,KAAKsE,cAAtB,8BACM,IACPtE,KAAKnB,MAAMiC,SAASgE,WAXvB,IAWmC,0BAEnC,sBAAKhF,UAAU,MAAf,UACGE,KAAKnB,MAAMc,IACV,wBAAQU,QAASL,KAAK0D,WAAY5D,UAAU,SAA5C,mBAGE,KACJ,wBAAQO,QAASL,KAAKmC,UAAWrC,UAAU,SAA3C,SACGE,KAAKnB,MAAMc,IAAM,iBAAmB,yBAK3C,qBAAKG,UAAU,aAAf,SACE,6BACGE,KAAKnB,MAAM2D,SAASuC,KAAI,SAAC3B,EAASpC,GAAV,OACvB,cAAC,EAAD,CACEjC,KAAMqE,EAENzD,IAAK,EAAKd,MAAMc,IAChBqF,IAAK,EAAKnG,MAAM8D,KAAK3B,IAFhB,EAAKnC,MAAMc,IAAMyD,EAAQ/D,mB,GAnQ5BiB,IAAMC,WCLJ0E,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBjE,MAAK,SAAAkE,GACJA,EAAaC,gBAEdnD,OAAM,SAAAoD,GACLpG,QAAQoG,MAAMA,EAAMlD,c","file":"static/js/main.de376b56.chunk.js","sourcesContent":["import React from \"react\";\n\nconst img_na =\n  \"https://www.sahilgraphics.com/wp-content/themes/shahil/assets/\" +\n  \"images/image-not-found.jpg\";\n\nexport default class Article extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      img_src: props.info.urlToImage,\n      source: props.info.source.name,\n      title: props.info.title,\n      description: props.info.description,\n      url: props.info.url,\n      content: props.info.content,\n      fullData: props.info,\n      strData: JSON.stringify(props.info),\n      cached: false,\n      tab: props.tab\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"new article\");\n  }\n\n  componentWillUnmount() {\n    console.log(\"destroying article\");\n  }\n\n  saveArticle = () => {\n    this.setState({\n      cached: true\n    });\n  };\n\n  /* prettier-ignore */\n  render() {\n    return (\n      <div className=\"article\">\n        <img src={this.state.img_src != null ? this.state.img_src : img_na}></img>\n        <p>\n          <b>{this.state.title + \" \" + this.state.source}</b> <br/>\n          {this.state.description} <br/>\n        </p>\n        <p>\n          {this.state.content}\n          {/* {this.state.showContent ? this.state.content : null} */}\n          {/* {this.state.strData} */}\n        </p>\n        <p align=\"right\">\n          <a href={this.state.url} target=\"_blank\" rel=\"noreferrer\">\n            original article</a> <br />\n          {this.state.tab ? null :\n            <button className=\"tab\" onClick={this.saveArticle}>save</button>\n          }\n        </p>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n// import \"./App.css\";\nimport Article from \"./components/Article\";\n\n/* GET NEWS FROM API CODE */\n\n// NETLIFY to deploy site\n// or github.io\n\n// consideration: keep country as US or go international?\n// consider whether cors available after deploying site\n\nconst APIKEY = \"78b9d599c4f94f8fa3afb1a5458928d6\";\nconst PROXY = \"https://cors-anywhere.herokuapp.com/\";\nconst PAGESIZE = 20; //default articles per request defined by NewsAPI\nconst key = \"&apiKey=f6d3a364faf54888a77e0bab46b8b66c\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      articles: [], //json data\n      refs: [],\n      tab: false, //short for \"is currently on saved tab\"\n      cache: [],\n      cachedRefs: [],\n      category: \"\",\n      keywords: [],\n      US: true,\n      currPage: 1,\n      currKeyword: \"\"\n    };\n  }\n\n  composeUrl = () => {\n    let url =\n      PROXY +\n      \"https://newsapi.org/v2/top-headlines?\" +\n      \"apiKey=\" +\n      APIKEY +\n      (this.state.US ? \"&country=us\" : \"\") +\n      \"&pageSize=\" +\n      PAGESIZE +\n      \"&page=\" +\n      this.state.currPage +\n      \"&category=\" +\n      this.state.category;\n    if (this.state.keywords.length > 0) {\n      url += \"&q=\";\n      for (let i = 0; i < this.state.keywords.length; i++) {\n        url += this.state.keywords[i];\n      }\n    }\n    return url;\n  };\n\n  //must be used as setState callback, as setState is asynchronous\n  getNews = () => {\n    if (this.state.category !== \"\") {\n      let h = new Headers();\n      h.append(\"Accept\", \"application/json\");\n      let reqUrl = this.composeUrl();\n      console.log(reqUrl);\n      let req = new Request(reqUrl, {\n        method: \"GET\",\n        headers: h,\n        mode: \"cors\"\n      });\n\n      fetch(req)\n        .then(response => {\n          if (response.ok) {\n            return response.json();\n          } else {\n            throw new Error(\"faulty response status \" + response.status);\n          }\n        })\n        .then(jsonData => {\n          //first update cache\n          if (this.state.tab) {\n            this.toggleTab();\n          } else {\n            this.updateCache();\n          }\n\n          console.log(jsonData.totalResults);\n\n          var articleData = [];\n          var newRefs = [];\n          for (let i = 0; i < jsonData.articles.length; i++) {\n            articleData.push(jsonData.articles[i]);\n            newRefs.push(React.createRef());\n          }\n          // console.log(\"setting lastCategory to \" + category);\n          this.setState({\n            articles: articleData,\n            refs: newRefs\n            // lastCategory: category\n          });\n        })\n        .catch(err => {\n          console.log(\"ERROR: \", err.message);\n        });\n    }\n  };\n\n  updateRefs = () => {\n    //go through current tab and saves refs in\n    //requires: called only in current tab\n  };\n\n  updateCache = () => {\n    console.log(\"cache update\");\n    let newCache = [];\n    let seen = new Set();\n    let numEntries = 0;\n    for (let i = 0; numEntries < PAGESIZE && i < this.state.refs.length; i++) {\n      let article = this.state.refs[i].current;\n      if (article.state.cached) {\n        newCache.push(article.state.fullData);\n        seen.add(article.state.url);\n        numEntries++;\n      }\n    }\n    for (let i = 0; numEntries < PAGESIZE && i < this.state.cache.length; i++) {\n      let data = this.state.cache[i];\n      if (seen.has(data.url)) {\n        console.log(\"deleted old save entry\");\n      } else {\n        newCache.push(data);\n        numEntries++;\n      }\n    }\n    return newCache;\n  };\n\n  clearCache = () => {\n    if (this.state.tab) {\n      this.setState({\n        articles: []\n      });\n    }\n  };\n\n  toggleTab = () => {\n    let newCache = this.state.tab ? this.state.cache : this.updateCache();\n    this.setState({\n      articles: newCache,\n      tab: !this.state.tab,\n      cache: this.state.articles\n    });\n  };\n\n  categoryBtn = cat => {\n    this.setState(\n      {\n        category: cat,\n        currPage: 1,\n        keywords: []\n      },\n      this.getNews\n    );\n  };\n\n  pageDecr = () => {\n    if (this.state.currPage > 1) {\n      this.setState(\n        {\n          currPage: this.state.currPage - 1\n        },\n        this.getNews\n      );\n    }\n  };\n\n  pageIncr = () => {\n    if (this.state.articles.length > 0) {\n      this.setState(\n        {\n          currPage: this.state.currPage + 1\n        },\n        this.getNews\n      );\n    }\n  };\n\n  //Form helpers\n  handleChange = event => {\n    this.setState({ currKeyword: event.target.value });\n  };\n\n  handleSubmit = event => {\n    if (this.state.currKeyword !== \"\") {\n      this.setState(\n        {\n          keywords: [this.state.currKeyword].concat(this.state.keywords),\n          currKeyword: \"\"\n        },\n        this.getNews\n      );\n    }\n    event.preventDefault();\n  };\n\n  clearKeywords = () => {\n    this.setState({ keywords: [] }, this.getNews);\n  };\n\n  render() {\n    //App className obsolete\n    return (\n      <div>\n        <div align=\"center\">\n          <button\n            className=\"styled categoryBtn\"\n            onClick={() => this.categoryBtn(\"entertainment\")}\n          >\n            Entertainment\n          </button>\n          <button\n            className=\"styled categoryBtn\"\n            onClick={() => this.categoryBtn(\"sports\")}\n          >\n            Sports\n          </button>\n          <button\n            className=\"styled categoryBtn\"\n            onClick={() => this.categoryBtn(\"technology\")}\n          >\n            Technology\n          </button>\n        </div>\n\n        <div className=\"controlbar\">\n          <div className=\"prevnext\">\n            {this.state.tab ? null : (\n              <button onClick={this.pageDecr} className=\"styled\">\n                prev\n              </button>\n            )}\n            {this.state.tab ? null : (\n              <button onClick={this.pageIncr} className=\"styled\">\n                next\n              </button>\n            )}\n          </div>\n          <div className=\"searchbar\">\n            <form onSubmit={this.handleSubmit}>\n              <input\n                type=\"text\"\n                style={{ marginLeft: 10, marginRight: 10 }}\n                value={this.state.currKeyword}\n                onChange={this.handleChange}\n              ></input>\n              <input type=\"submit\" value=\"Add keyword\"></input>\n              <button onClick={this.clearKeywords}>Clear Filters</button>\n            </form>{\" \"}\n            {this.state.keywords.toString()} <br />\n          </div>\n          <div className=\"tab\">\n            {this.state.tab ? (\n              <button onClick={this.clearCache} className=\"styled\">\n                Clear\n              </button>\n            ) : null}\n            <button onClick={this.toggleTab} className=\"styled\">\n              {this.state.tab ? \"Search results\" : \"Saved articles\"}\n            </button>\n          </div>\n        </div>\n\n        <div className=\"scrollable\">\n          <ul>\n            {this.state.articles.map((article, i) => (\n              <Article\n                info={article}\n                key={this.state.tab + article.url}\n                tab={this.state.tab}\n                ref={this.state.refs[i]}\n              />\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}